// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#define ROTATE_THROTTLE 0.5     // percent of full throttle to rotate

#include "Commands/ChassisRotateClockwise.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

/**
 * @brief Construct a new Chassis Rotate Clockwise:: Chassis Rotate Clockwise object
 * 
 * Set the clockwise parameter to the variable m_clockwise (with the command as the scope).
 * 
 * @param clockwise 
 */
ChassisRotateClockwise::ChassisRotateClockwise(bool clockwise): frc::Command() {
    m_clockwise = clockwise;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

/**
 * @brief Called just before this Command runs the first time 
 */
void ChassisRotateClockwise::Initialize() {

}

/**
 * @brief Called repeatedly when this Command is scheduled to run
 * 
 * Depending on the m_clockwise variable, turn the robot 90 degrees
 * clockwise or counter-clockwise (in place).
 * 
 * Rotate each side of wheel at ROTATE_THROTTLE ft/s.
 */
void ChassisRotateClockwise::Execute() {
    if (m_clockwise) {
        Robot::driveTrain->VelocityTankDrive(ROTATE_THROTTLE, -ROTATE_THROTTLE);
    }
    else {
        Robot::driveTrain->VelocityTankDrive(-ROTATE_THROTTLE, ROTATE_THROTTLE);
    }
}

/**
 * @brief Make this return true when this Command no longer needs to run execute()
 * 
 * @return false (by default)
 */
bool ChassisRotateClockwise::IsFinished() {
    return false;
}

/**
 * @brief Called once after isFinished returns true
 * 
 * Set all wheel velocities to 0.0 ft/s.
 */
void ChassisRotateClockwise::End() {
    Robot::driveTrain->VelocityTankDrive(0.0, 0.0);
}

/**
 * @brief Called when another command which requires one or more of the same subsystems is scheduled to run
 */
void ChassisRotateClockwise::Interrupted() {
    End();
}
