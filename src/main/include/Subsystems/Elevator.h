// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ELEVATOR_H
#define ELEVATOR_H
#include "frc/commands/Subsystem.h"
#include "frc/WPILib.h"
#include "rev/CANSparkMax.h"
#include "ctre/Phoenix.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Elevator: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<frc::DigitalInput> limitSwitchInnerTop;
	std::shared_ptr<frc::DigitalInput> limitSwitchInnerBottom;
	std::shared_ptr<WPI_TalonSRX> talonInnerFront;
	std::shared_ptr<WPI_TalonSRX> talonRear;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	const int sparkElevatorID = 5;
	const double kTs = 0.02;		// 20 msec tick for periodic
	std::shared_ptr<rev::CANSparkMax> sparkMaxOuter;
	std::shared_ptr<rev::CANPIDController> pidOuter;
	double mInnerPosCmd = 0.0;
	double mOuterPosCmd = 0.0;
	double mRearPosCmd = 0.0;
	void SetElevatorPositions();
	void SetInnerPosition();
	void SetOuterPosition();
	void SetRearPosition();
	void StopAllElevators();
	void StopInner();
	void StopOuter();
	void StopRear();
	double GetInnerPos() { return talonInnerFront->GetSelectedSensorPosition(0);}
	double GetRearPos() { return talonRear->GetSelectedSensorPosition(0);}
	double GetOuterPos() { return sparkMaxOuter->GetEncoder().GetPosition();}

public:
	Elevator();
	void InitDefaultCommand() override;
	void Periodic() override;
	bool LimitInnerTop() { return limitSwitchInnerTop->Get();}
	bool LimitInnerBottom() { return limitSwitchInnerBottom->Get();}
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void SetInnerPosition(double pos) { mInnerPosCmd = pos;}
	void SetOutterPosition(double pos) { mOuterPosCmd = pos;}
	void SetRearPosition(double pos) { mRearPosCmd = pos;}
	bool InnerAtPosition();
	bool OuterAtPosition();
	bool RearAtPosition();


};

#endif
